cmake_minimum_required(VERSION 3.3)
project(DAW-dependencies)
option(BUILD_SHARED_LIBS "Build shared libs" OFF)

if (BUILD_SHARED_LIBS)
  set(BUILD_STATIC_LIBS OFF)
else()
  set(BUILD_STATIC_LIBS ON)
endif()

include(ExternalProject)
message (STATUS "CMAKE_BUILD_TYPE: ${CMAKE_BUILD_TYPE}")
message (STATUS "BUILD_SHARED_LIBS: ${BUILD_SHARED_LIBS}")
set(GLFW_BUILD_PATH ${CMAKE_BINARY_DIR}/tmp/glfw)
set(GLFW_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib/glfw)
set(GLFW_ROOT ${CMAKE_SOURCE_DIR}/glfw)
set(SQLiteCPP_BUILD_PATH ${CMAKE_BINARY_DIR}/tmp/SQLiteCpp)
set(SQLiteCPP_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib/SQLiteCpp)
set(SQLiteCPP_ROOT ${CMAKE_SOURCE_DIR}/SQLiteCpp)
set(soxr_BUILD_PATH ${CMAKE_BINARY_DIR}/tmp/soxr)
set(soxr_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib/soxr)
set(soxr_ROOT ${CMAKE_SOURCE_DIR}/soxr)
set(PORTAUDIO_BUILD_PATH ${CMAKE_BINARY_DIR}/tmp/portaudio)
set(PORTAUDIO_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib/portaudio)
set(PORTAUDIO_ROOT ${CMAKE_SOURCE_DIR}/portaudio)

ExternalProject_Add(glfw
                  BUILD_ALWAYS 1
                    PREFIX ${GLFW_BUILD_PATH}
                    SOURCE_DIR ${GLFW_ROOT}
                    INSTALL_DIR ${GLFW_OUTPUT_PATH}
                    CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DGLFW_BUILD_DOCS:BOOL=OFF -DGLFW_BUILD_TESTS:BOOL=OFF -DGLFW_BUILD_EXAMPLES:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>)

ExternalProject_Add(SQLiteCpp
                  BUILD_ALWAYS 1
                    PREFIX ${SQLiteCPP_BUILD_PATH}
                    SOURCE_DIR ${SQLiteCPP_ROOT}
                    INSTALL_DIR ${SQLiteCPP_OUTPUT_PATH}
                  CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS:BOOL=${BUILD_SHARED_LIBS} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DSQLITECPP_RUN_CPPCHECK:BOOL=OFF -DSQLITECPP_RUN_CPPLINT:BOOL=OFF -DSQLITECPP_INTERNAL_SQLITE:BOOL=ON -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>)

ExternalProject_Add(soxr
                  BUILD_ALWAYS 1
                    PREFIX ${soxr_BUILD_PATH}
                    SOURCE_DIR ${soxr_ROOT}
                    INSTALL_DIR ${soxr_OUTPUT_PATH}
                  CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=ON -DWITH_OPENMP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>)

ExternalProject_Add(portaudio
                  BUILD_ALWAYS 1
                    PREFIX ${PORTAUDIO_BUILD_PATH}
                    SOURCE_DIR ${PORTAUDIO_ROOT}
                    INSTALL_DIR ${PORTAUDIO_OUTPUT_PATH}
                  CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DPA_BUILD_SHARED:BOOL=${BUILD_SHARED_LIBS} -DPA_BUILD_STATIC:BOOL=${BUILD_STATIC_LIBS} -DPA_DLL_LINK_WITH_STATIC_RUNTIME:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>)
