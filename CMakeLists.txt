cmake_minimum_required(VERSION 3.3)
project(DAW-dependencies)
include(ExternalProject)
option(BUILD_DEPS_STATIC "Build static libs" On)
option(BUILD_DEPS_SHARE "Build shared libs" Off)
message(STATUS "BUILD_DEPS_STATIC = ${BUILD_DEPS_STATIC}")
message(STATUS "BUILD_DEPS_SHARE = ${BUILD_DEPS_SHARE}")

FUNCTION(FN_BUILD_LIBS buildSuffix buildShared)

  set(PROJECT_BUILD_ARG_SHARED_LIBS ${buildShared})
  if(buildShared)
    set(PROJECT_BUILD_ARG_STATIC_LIBS OFF)
  else()
    set(PROJECT_BUILD_ARG_STATIC_LIBS ON)
  endif(buildShared)
  message (STATUS "PROJECT_BUILD_ARG_SHARED_LIBS: ${PROJECT_BUILD_ARG_SHARED_LIBS}")
  message (STATUS "PROJECT_BUILD_ARG_STATIC_LIBS: ${PROJECT_BUILD_ARG_STATIC_LIBS}")
  message(STATUS "FN_BUILD_LIBS buildSuffix = ${buildSuffix}")
  message(STATUS "FN_BUILD_LIBS GLFW_BUILD_PATH = ${GLFW_BUILD_PATH}")
  message(STATUS "FN_BUILD_LIBS CMAKE_BUILD_TYPE = ${CMAKE_BUILD_TYPE}")
  ExternalProject_Add("glfw-${buildSuffix}"
                    BUILD_ALWAYS 1
                      PREFIX ${GLFW_BUILD_PATH}
                      SOURCE_DIR ${GLFW_ROOT}
                      INSTALL_DIR ${GLFW_OUTPUT_PATH}
                      CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS:BOOL=${PROJECT_BUILD_ARG_SHARED_LIBS} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DGLFW_BUILD_DOCS:BOOL=OFF -DGLFW_BUILD_TESTS:BOOL=OFF -DGLFW_BUILD_EXAMPLES:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                      BUILD_COMMAND ""
                      INSTALL_COMMAND
                      ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE} 
                  )

  ExternalProject_Add("SQLiteCpp-${buildSuffix}"
                    BUILD_ALWAYS 1
                      PREFIX ${SQLiteCPP_BUILD_PATH}
                      SOURCE_DIR ${SQLiteCPP_ROOT}
                      INSTALL_DIR ${SQLiteCPP_OUTPUT_PATH}
                    CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS:BOOL=${PROJECT_BUILD_ARG_SHARED_LIBS} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DSQLITECPP_RUN_CPPCHECK:BOOL=OFF -DSQLITECPP_RUN_CPPLINT:BOOL=OFF -DSQLITECPP_INTERNAL_SQLITE:BOOL=ON -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                    BUILD_COMMAND ""
                    INSTALL_COMMAND
                    ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE} 
                  )

  ExternalProject_Add("soxr-${buildSuffix}"
                    BUILD_ALWAYS 1
                      PREFIX ${soxr_BUILD_PATH}
                      SOURCE_DIR ${soxr_ROOT}
                      INSTALL_DIR ${soxr_OUTPUT_PATH}
                    CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DBUILD_EXAMPLES:BOOL=OFF -DBUILD_SHARED_LIBS:BOOL=ON -DBUILD_TESTS:BOOL=ON -DWITH_OPENMP:BOOL=OFF -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                    BUILD_COMMAND ""
                    INSTALL_COMMAND
                    ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE} 
                  )

  ExternalProject_Add("portaudio-${buildSuffix}"
                    BUILD_ALWAYS 1
                      PREFIX ${PORTAUDIO_BUILD_PATH}
                      SOURCE_DIR ${PORTAUDIO_ROOT}
                      INSTALL_DIR ${PORTAUDIO_OUTPUT_PATH}
                    CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DPA_BUILD_SHARED:BOOL=${PROJECT_BUILD_ARG_SHARED_LIBS} -DPA_BUILD_STATIC:BOOL=${PROJECT_BUILD_ARG_STATIC_LIBS} -DPA_DLL_LINK_WITH_STATIC_RUNTIME:BOOL=OFF -DPA_ENABLE_DEBUG_OUTPUT:BOOL=Off -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                    BUILD_COMMAND ""
                    INSTALL_COMMAND
                    ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE} 
                  )


ExternalProject_Add("portmidi-${buildSuffix}"
                BUILD_ALWAYS 1
                  PREFIX ${PORTMIDI_BUILD_PATH}
                  SOURCE_DIR ${PORTMIDI_ROOT}
                  INSTALL_DIR ${PORTMIDI_OUTPUT_PATH}
                CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DPA_BUILD_SHARED:BOOL=${PROJECT_BUILD_ARG_SHARED_LIBS} -DPA_BUILD_STATIC:BOOL=${PROJECT_BUILD_ARG_STATIC_LIBS} -DPA_DLL_LINK_WITH_STATIC_RUNTIME:BOOL=OFF -DPA_ENABLE_DEBUG_OUTPUT:BOOL=Off -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                BUILD_COMMAND ""
                INSTALL_COMMAND
                ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE} 
              )


ExternalProject_Add("pybind11-${buildSuffix}"
                BUILD_ALWAYS 1
                  PREFIX ${PYBIND11_BUILD_PATH}
                  SOURCE_DIR ${PYBIND11_ROOT}
                  INSTALL_DIR ${PYBIND11_OUTPUT_PATH}
                CMAKE_CACHE_ARGS -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE} -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER} -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER} -DCMAKE_C_FLAGS:STRING=${CMAKE_C_FLAGS} -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS} -DPYBIND11_TEST:BOOL=Off -DPYBIND11_INSTALL:BOOL=On -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
                BUILD_COMMAND ""
                INSTALL_COMMAND
                ${CMAKE_COMMAND} --build . --target install --config ${CMAKE_BUILD_TYPE} 
              )
ENDFUNCTION(FN_BUILD_LIBS)

FUNCTION(FN_BUILD_LIBRARIES buildType buildShared)
  set(CMAKE_BUILD_TYPE ${buildType})
  if (buildShared)
    set(BUILD_PATH_SUFFIX "${CMAKE_CXX_COMPILER_ID}-${buildType}-shared")
  else()
    set(BUILD_PATH_SUFFIX "${CMAKE_CXX_COMPILER_ID}-${buildType}-static")
  endif(buildShared)
  string(TOLOWER ${BUILD_PATH_SUFFIX} BUILD_PATH_SUFFIX)
  set(DEPS_BUILD_FOLDER_LIBS "lib-${BUILD_PATH_SUFFIX}")
  set(DEPS_BUILD_FOLDER_TMP "tmp-${BUILD_PATH_SUFFIX}")
  set(GLFW_BUILD_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_TMP}/glfw)
  set(GLFW_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_LIBS}/glfw)
  set(GLFW_ROOT ${CMAKE_SOURCE_DIR}/glfw)
  set(SQLiteCPP_BUILD_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_TMP}/SQLiteCpp)
  set(SQLiteCPP_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_LIBS}/SQLiteCpp)
  set(SQLiteCPP_ROOT ${CMAKE_SOURCE_DIR}/SQLiteCpp)
  set(soxr_BUILD_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_TMP}/soxr)
  set(soxr_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_LIBS}/soxr)
  set(soxr_ROOT ${CMAKE_SOURCE_DIR}/soxr)
  set(PORTAUDIO_BUILD_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_TMP}/portaudio)
  set(PORTAUDIO_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_LIBS}/portaudio)
  set(PORTAUDIO_ROOT ${CMAKE_SOURCE_DIR}/portaudio)
  set(PORTMIDI_BUILD_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_TMP}/portmidi)
  set(PORTMIDI_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_LIBS}/portmidi)
  set(PORTMIDI_ROOT ${CMAKE_SOURCE_DIR}/portmidi)
  set(PYBIND11_BUILD_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_TMP}/pybind11)
  set(PYBIND11_OUTPUT_PATH ${CMAKE_BINARY_DIR}/${DEPS_BUILD_FOLDER_LIBS}/pybind11)
  set(PYBIND11_ROOT ${CMAKE_SOURCE_DIR}/pybind11)
  FN_BUILD_LIBS(${BUILD_PATH_SUFFIX} ${buildShared})
ENDFUNCTION(FN_BUILD_LIBRARIES)
if(BUILD_DEPS_STATIC)
  FN_BUILD_LIBRARIES(Debug Off)
 FN_BUILD_LIBRARIES(Release Off)
endif(BUILD_DEPS_STATIC)
if(BUILD_DEPS_SHARE)
#  FN_BUILD_LIBRARIES(Debug On)
#  FN_BUILD_LIBRARIES(Release On)
endif(BUILD_DEPS_SHARE)
